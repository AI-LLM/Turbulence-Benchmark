from Q21.$5_results_$6.Folder_$3.generated_answer import $4


def test_list_of_zeros():
    list_of_zeros = [0 for i in range(0, 3 * $2 + 1)]
    expected_list = [0 for i in range($1, $2 + 1)]
    assert $4(list_of_zeros) == expected_list


def test_negate_of_lists():
    initial_list = [i for i in range(0, $2 + 1)]
    neg_initial_list = [-i for i in range(0, $2 + 1)]
    expected_list = [-i for i in $4(neg_initial_list)]
    assert $4(initial_list) == expected_list


def test_negate_of_divisors():
    neg_div = -$0
    neg_div_list = [neg_div for _ in range(0, $2 + 1)]
    expected_list = [neg_div for _ in range($1, $2 + 1)]
    assert $4(neg_div_list) == expected_list


def test_lengths():
    initial_list = [x for x in range(0, $2 + 1)]
    expected_list = $4(initial_list)
    assert len(expected_list) <= len(initial_list)


def test_sums():
    initial_list = [x for x in range(0, $2 + 1)]
    expected_list = $4(initial_list)
    assert sum(expected_list) <= sum(initial_list)


def test_coefficient_of_divisor():
    initial_list = [$0 * i for i in range(1, $2 + 1)]
    expected_list = initial_list[$1: $2 + 1]
    assert $4(initial_list) == expected_list


def test_not_divisible_nums():
    initial_list = [i for i in range(-2000, 2000) if i % $0 != 0]
    assert $4(initial_list) == []
